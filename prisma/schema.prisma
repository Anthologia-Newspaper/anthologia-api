// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  email     String      @unique
  username  String      @unique
  password  String
  articles  Article[]   @relation(name: "WrittenArticles")
  likes     Article[]   @relation(name: "LikedArticles")
  anthology Anthology[]
  roles     Role[]      @default([USER])
  Event     Event[]
}

model Article {
  id          Int         @id @default(autoincrement())
  title       String
  subtitle    String?
  topic       Topic       @relation(fields: [topicId], references: [id])
  topicId     Int
  author      User        @relation(name: "WrittenArticles", fields: [authorId], references: [id])
  authorId    Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  cid         String?
  content     String
  draft       Boolean     @default(true)
  anthology   Anthology[]
  viewCounter Int         @default(0)
  likeCounter Int         @default(0)
  likes       User[]      @relation(name: "LikedArticles")
  dailyStats  Event[]
}

model Event {
  id          Int       @id @default(autoincrement())
  type        EventType
  createdAt   DateTime  @default(now())
  createdBy   User      @relation(fields: [createdById], references: [id])
  createdById Int
  article     Article   @relation(fields: [articleId], references: [id])
  articleId   Int
}

model Anthology {
  id          Int       @id @default(autoincrement())
  compiler    User      @relation(fields: [userId], references: [id])
  userId      Int
  articles    Article[]
  name        String
  description String?
  isPublic    Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Topic {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  image       String
  articles    Article[]
}

model RevokedToken {
  id        Int      @id @default(autoincrement())
  jti       String   @unique
  createdAt DateTime @default(now())
}

enum EventType {
  VIEW
  LIKE
  UNLIKE
}

enum Role {
  USER
}
